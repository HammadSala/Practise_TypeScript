/ number data typevara : number = 123;varb : number = 123.4567;varc : number = 1010111;vard : number = 0o502; // we have to put 0o first and then the octal number for octal numbervare : number = 0x345a4f3; // we have to put 0x first and then number for hexa decimal// string data typevarf : string = "Hii"varg : string = 'Hii learners'varh : string = "c"vari : string = '"hiiis"'// booleanvarj : boolean = truevark : boolean = false// null andundefinedvarl : number = nullvarm : number = undefined// anyvarn : any = "Great Learning"varo : any = 12varp : any = [12,"122", 0xabdde, true, null, undefined]// Arrayvarq : Array<string> = ["Hello..."]// tuplevarr : [boolean, number] = [true, 12]// union type// it will take number or string in any ordervars : (number|string)[] = ["Evening", 45, 123, "Night"]// enum type// will return the value based on number making first value as 0// 1. Number enumsenumGames_1 {
VideoGames,OutoodGames,IndoorGames}enumGames_2 {VideoGames=1, // can start with any numberOutoodGames,IndoorGames}enumGames_3 {VideoGames= 10, OutoodGames= 4,IndoorGames= 1}// 2. String enumsenumSports {Cricket= "CRICKET",Football= "FOOTBALL",Hockey= "HOCKEY",BasketBall= "BASKETBALL"}// 3. Heterogenous(number and string together) enums// here the location value will become 46 by defaultenumBrands_1 {Puma= "Puma",Branches= 45,location}enumBrands_2 {Puma= "Puma",location= 12,StoreLocation= "Delhi"}console.log("\n-------------------------Number data type-------------------------\n")console.log(typeofa,' : ', a)console.log(typeofb +' : '+ b)console.log(typeofc +' : '+ c)console.log(typeofd +' : '+ d)console.log(typeofe +' : '+ e)
console.log("\n-------------------------String data type-------------------------\n")console.log(typeoff +' : '+ f)console.log(typeofg +' : '+ g)console.log(typeofh +' : '+ h)console.log(typeofi +' : '+ i)console.log("\n-------------------------boolean data type-------------------------\n")console.log(typeofj +' : '+ j)console.log(typeofk +' : '+ k)console.log("\n-------------------------null and undefined data type-------------------------\n")console.log(typeofl +' : '+ l)console.log(typeofm +' : '+ m)console.log("\n-------------------------any data type-------------------------\n")console.log(typeofn +' : '+ n)console.log(typeofo +' : '+ o)console.log(typeofp +' : '+ p)console.log("\n-------------------------array data type-------------------------\n")console.log(typeofq +' : '+ q)console.log("\n-------------------------tuple data type-------------------------\n")console.log(typeofr +' : '+ r)console.log("\n-------------------------Union data type-------------------------\n")console.log(typeofs +' : '+ s)console.log("\n-------------------------enum data type-------------------------\n")console.log("\n-------------------------enum data type with default number representation-------------------------\n")console.log(typeofGames_1 +' : '+ Games_1[0])console.log(typeofGames_1 +' : '+ Games_1["VideoGames"])console.log(typeofGames_1 +' : '+ Games_1.IndoorGames)console.log("\n-------------------------enum data type with change of starting number reresentation-------------------------\n")console.log(typeofGames_2 +' : '+ Games_2[2])
console.log(typeofGames_2 +' : '+ Games_2["OutoodGames"])console.log(typeofGames_2 +' : '+ Games_2.VideoGames)console.log("\n-------------------------enumdata type with customized number representation-------------------------\n")console.log(typeofGames_3 +' : '+ Games_3[10])console.log(typeofGames_3 +' : '+ Games_3["IndoorGames"])console.log(typeofGames_3 +' : '+ Games_3.OutoodGames)console.log("\n-------------------------enum data type with string representation-------------------------\n")console.log(typeofSports +' : '+ Sports.BasketBall)console.log(typeofSports +' : '+ Sports["BasketBall"])console.log("\n-------------------------enumdata type with heterogenous representation-------------------------\n")console.log(typeofBrands_1 +' : '+ Brands_1.Branches)console.log(typeofBrands_1 +' : '+ Brands_1.location)console.log(typeofBrands_1 +' : '+ Brands_1.Puma)